import os
import sys
import random
import json
import numpy as np

def generate_csv(path,type = 0):                                                      # creates the feature vectors
	file_list = os.listdir(path)
	file_list = file_list[:200]
	csv_list = []
	for file in file_list:
		try:
			with open(os.path.join(path,file)) as f:
				data = json.load(f)
				l = []
				if 'duration' in data['info']:                                        # duration information
					l.append(int(data['info']['duration']))
				else: l.append(0)
				net = 0
				for keys in data['network']:                                          # network information
					net+=len(data['network'][keys])
				l.append(net)
				if 'summary' in data['behavior']:                                     # summary information
					if 'file_created' in data['behavior']['summary']:
						l.append(len(data['behavior']['summary']['file_created']))
					else: l.append(0)
					if 'file_opened' in data['behavior']['summary']:
						l.append(len(data['behavior']['summary']['file_opened']))
					else: l.append(0)
					if 'file_copied' in data['behavior']['summary']:
						l.append(len(data['behavior']['summary']['file_copied']))
					else: l.append(0)
					if 'file_exists' in data['behavior']['summary']:
						l.append(len(data['behavior']['summary']['file_exists']))
					else: l.append(0)
					if 'file_recreated' in data['behavior']['summary']:
						l.append(len(data['behavior']['summary']['file_recreated']))
					else: l.append(0)
					if 'regkey_read' in data['behavior']['summary']:
						l.append(len(data['behavior']['summary']['regkey_read']))
					else: l.append(0)
					if 'file_deleted' in data['behavior']['summary']:
						l.append(len(data['behavior']['summary']['file_deleted']))
					else: l.append(0)
					if 'directory_created' in data['behavior']['summary']:
						l.append(len(data['behavior']['summary']['directory_created']))
					else: l.append(0)
					if 'regkey_opened' in data['behavior']['summary']:
						l.append(len(data['behavior']['summary']['regkey_opened']))
					else: l.append(0)
					if 'file_written' in data['behavior']['summary']:
						l.append(len(data['behavior']['summary']['file_written']))
					else: l.append(0)
					if 'dll_loaded' in data['behavior']['summary']:
						l.append(len(data['behavior']['summary']['dll_loaded']))
					else: l.append(0)
				sum_apis=0
				if 'apistats' in data['behavior']:                                     # api statistics
					keys = data['behavior']['apistats']
					num_keys = 1
					for key in keys:
						sum_apis+=int(key)
						num_keys+=1
					l.append(sum_apis/num_keys)                                        # average api calls per file
				l.append(type) 
				csv_list.append(l)
		except:
			print("file ",file," can\'t be opened/parsed, prediction might be wrong for this file\n")
			csv_list.append([0 for i in range(15)])
			continue

	return csv_list

if __name__=="__main__":
	csv_list = np.array(generate_csv("Benign",0))
	np.savetxt('benign_sample.csv', csv_list,fmt="%d", delimiter=",")
	csv_list = np.array(generate_csv("malwares",1))
	np.savetxt('malwares_sample.csv', csv_list,fmt="%d", delimiter=",")

